---
pipeline:
  mongo-setup:
    image: mongo:3.4.10
    commands:
      - sleep 15
      - 'mongo --host mongo --eval "db.getSiblingDB(''test'').createUser({user:''test'', pwd:''test'', roles:[{role:''dbOwner'', db:''test''}]});"'

  test:
    image: python:${PYTHON_VERSION}
    environment:
      - TOLATABLES_MONGODB_HOST=mongo
      - CELERY_BROKER_URL=redis://redis@redis:6379/0
    secrets: [SECRET_PASS]
    commands:
      - pip install -r requirements/ci.txt
      - python manage.py test
    when:
      event: [push, tag]

  build-docker-image:
    image: plugins/docker
    insecure: true
    registry: registry.tola.io
    repo: registry.tola.io/toladata/tolatables
    file: Dockerfile
    tags:
      - ${DRONE_COMMIT_SHA}
    secrets: [DOCKER_USERNAME, DOCKER_PASSWORD]
    when:
      event: [push, tag]
      branch: [master, demo, staging, dev-v2]
      status: [success]

  notify:
    image: plugins/slack
    channel: drone-ci
    username: Drone-CI
    secrets: [SLACK_WEBHOOK]
    when:
      status: [failure]
      event: [push, tag]
      branch: [master, demo, staging, dev-v2]

services:
  mongo:
    image: mongo:3.4.10
  redis:
    image: redis:4.0

matrix:
  PYTHON_VERSION:
    - 2.7
